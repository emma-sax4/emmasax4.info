name: Develop
on:
  pull_request:
    branches: [ source ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v1

    - name: Define Variables
      run: |
        pull_id=$(echo ${{ github.ref }} | sed -E 's|refs/pull/||' | sed -E 's|/merge||')
        echo "::set-env name=PULL_ID::$pull_id"
        echo "::set-env name=PULL_URL::$(echo https://github.com/${{ github.repository }}/pull/$pull_id)"
        echo "::set-env name=BRANCH::$(echo ${{ github.head_ref }} | sed -E 's|refs/[a-zA-Z]+/||')"
        echo "::set-env name=BUILD_URL::$(echo https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"

    - name: Switch to Current Branch
      run: git checkout ${{ env.BRANCH }}

    - name: Configure Bundler
      run: sudo gem install bundler -v $(cat Gemfile.lock | tail -1 | tr -d ' ')

    - name: Configure Gem Cache
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundler-cache-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: bundler-cache-

    - name: Install Gems
      run: bundle config set path 'vendor/bundle' && bundle install

    - name: Jekyll Build
      run: JEKYLL_ENV=production bundle exec jekyll build --destination ./_site/

    - name: HTML Proofer
      run: bundle exec htmlproofer --assume-extension --allow-hash-href --internal-domains /emmasax4.info/ --only_4xx ./_site/

    - name: GitHub Pages Deploy
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: master
        FOLDER: _site
        COMMIT_MESSAGE: 'Deploy to ${{ github.repository }}.git:master'
        GIT_CONFIG_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        GIT_CONFIG_NAME: github-actions[bot]

    - name: Set Deploy Notification Message
      run: |
        if [[ ${{ env.DEPLOYMENT_STATUS }} == "skipped" ]]; then
          echo "::set-env name=DEPLOY_MESSAGE::$(echo Deploy to GitHub Pages was *skipped*)"
        elsif [[ ${{ env.DEPLOYMENT_STATUS }} == "success" ]]; then
          echo "::set-env name=DEPLOY_MESSAGE::$(echo Deploy to GitHub Pages was *successful*)"
        elsif [[ ${{ env.DEPLOYMENT_STATUS }} == "success" ]]; then
          echo "::set-env name=DEPLOY_MESSAGE::$(echo Deploy to GitHub Pages was *unsuccessful*)"
        fi

    - name: Notify Slack on Success
      if: success()
      uses: emma-sax4/action-slacker@emmasax4_action_slacker
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      with:
        channel: '#general'
        icon_url: https://img.icons8.com/ios-filled/50/000000/github.png
        username: GitHub Actions
        color: '#23c22e'
        title: ${{ github.repository }}
        title_link: https://github.com/${{ github.repository }}
        author_name: ${{ github.actor }}
        author_link: https://github.com/${{ github.actor }}
        author_icon: https://github.com/${{ github.actor }}.png
        text: >-
          Build <${{ env.BUILD_URL }}|${{ github.run_id }}> on branch `${{ env.BRANCH }}`
          in PR <${{ env.PULL_URL }}|#${{ env.PULL_ID }}> *passed*. ${{ env.DEPLOY_MESSAGE }}.
        footer: 'GitHub SHA: ${{ github.sha }}'

    - name: Notify Slack on Failure
      if: failure()
      uses: emma-sax4/action-slacker@emmasax4_action_slacker
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      with:
        channel: '#general'
        icon_url: https://img.icons8.com/ios-filled/50/000000/github.png
        username: GitHub Actions
        color: '#bd2222'
        title: ${{ github.repository }}
        title_link: https://github.com/${{ github.repository }}
        author_name: ${{ github.actor }}
        author_link: https://github.com/${{ github.actor }}
        author_icon: https://github.com/${{ github.actor }}.png
        text: >-
          Build <${{ env.BUILD_URL }}|${{ github.run_id }}> on branch `${{ env.BRANCH }}`
          in PR <${{ env.PULL_URL }}|#${{ env.PULL_ID }}> *failed*. ${{ env.DEPLOY_MESSAGE }}.
        footer: 'GitHub SHA: ${{ github.sha }}'
