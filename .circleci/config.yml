version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2
  slack: circleci/slack@3.4.2

jobs:
  build:
    working_directory: ~/emma-sax4.github.io
    docker:
      - image: circleci/ruby:2.6.0-node
    steps:
      - checkout
      - run:
          name: Configure Bundler
          command: |
            echo "export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d ' ')" >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
      - restore_cache:
          key: bundler-cache-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle Install
          command: bundle install --path vendor/bundle
      - save_cache:
          key: bundler-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Jekyll Build
          command: JEKYLL_ENV=production bundle exec jekyll build --destination ./site
      - run:
          name: HTML Proofer
          command: |
            bundle exec htmlproofer \
            --assume-extension \
            --allow-hash-href \
            --internal-domains /emmasax4.info/ \
            --url-ignore /linkedin/,/digikey/ \
            ./site \
            || echo "HTML Proofer failed. Please investigate the failures."
      - run:
          name: Generate Custom Slack Message
          command: |
            if [ -z ${CIRCLE_PULL_REQUEST} ]; then
              SLACK_MESSAGE="Build #${CIRCLE_BUILD_NUM} of ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}@${CIRCLE_BRANCH} in PR ${CIRCLE_PULL_REQUEST} by ${CIRCLE_USERNAME}"
            else
              SLACK_MESSAGE="Build #${CIRCLE_BUILD_NUM} of ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}@${CIRCLE_BRANCH} by ${CIRCLE_USERNAME}"
            fi
            echo "export $SLACK_MESSAGE" >> $BASH_ENV
            source $BASH_ENV
      - slack/status:
          success_message: $SLACK_MESSAGE passed.
          failure_message: $SLACK_MESSAGE failed.
          include_job_number_field: false
          include_project_field: false
